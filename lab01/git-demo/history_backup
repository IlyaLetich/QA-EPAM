ssh-keygen -t -rsa -C "IlyaLetich@gmail.com"
ssh-keygen -C "IlyaLetich@gmail.com"
git config --global user.name "Ilya Letich"
git config --global user.email "IlyaLetich@gmail.com"
cd [200~$ git@github.com:IlyaLetich/git-demo.git
clearcdbash: /c/Users/IlyaL/.profile: is a directory
IlyaL@IlyaLetich MINGW64 ~
$ ssh-keygen -t -rsa -C "IlyaLetich@gmail.com"
unknown key type -rsa
IlyaL@IlyaLetich MINGW64 ~
$ ssh-keygen -C "IlyaLetich@gmail.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/IlyaL/.ssh/id_rsa):
Created directory '/c/Users/IlyaL/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/IlyaL/.ssh/id_rsa
Your public key has been saved in /c/Users/IlyaL/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:4LEkNIeI2TgxC2SNMn9NSZkalzU/xHFByaHMRcwtsJk IlyaLetich@gmail.com
The key's randomart image is:
+---[RSA 3072]----+
|=Oo.ooo*o.+OB=   |
|X+ooooB  *.B* .  |
|o+  .*+   E  .   |
|  . o+.+   .     |
|   .  o S        |
|                 |
|                 |
|                 |
|                 |
+----[SHA256]-----+

IlyaL@IlyaLetich MINGW64 ~
$ ^C

IlyaL@IlyaLetich MINGW64 ~
$ git config --global user.name "Ilya Letich"

IlyaL@IlyaLetich MINGW64 ~
$ git config --global user.email "IlyaLetich@gmail.com"

IlyaL@IlyaLetich MINGW64 ~
$ cd ^[[200~$ git@github.com:IlyaLetic
clear
git config user.name
git config user.email
D:
clear
git log
git merge
git marge
git merge feature
git status
git add .
git commit . -m "merge conflict"
git commit lab01.txt -m "merge conflict"
git status
git commit . -m "merging"
git commit .
git status
git commit
git statu
git status
git log
gitk&
git branch
git branch storm
git branch
git checkout storm
clear
sit status
git status
git add .
git commit -m "create storm"
git status
git commit -m "added in storm 2 rows"
git add .
git commit -m "added in storm 2 rows"
git checkout main
git add .
git commit -m "create pursuit"
git tag session1
git status
git log
clear
git checkout storm
git checkout storm
git check-ignore -v lab01.txt
git checkout storm
git status
git status
git status
git status
git add .
git add commit
git add commit -m "gitignore"
git status
git commit -m "gitignore"
git checkout storm
git rebase maste
git rebase main
git log
girk&
gitk&
git rebase -i main
git status
git merge main feature
git merge main 
git checkout main
git status
git rebase
git rebase --abort
git rebase 
git rebase main
git rebase main
git rebase --abort
git rebase
git rebase main
git add .
git commit -m "rebase01"
git rebase main
git checkout main
git rebase main
git rebase --continue
git rebase --continue
git add 
git commit -m "rebase02"
git rebase --continue
git checkout main
git log
git merge storm
git log
gitstatus
git status
git checkout storm
git status
git checkout main
clear
git push
git remote -v
git remote remove origin
git remote -v
git remoteadd origin git@github.com:IlyaLetich/lab01.git
git remote -v
git remote add origin git@github.com:IlyaLetich/lab01.git
git remote -v
git push
git push --set-upstream origin main
git push --set-upstream origin main
git push
git push --set-upstream origin main
git remote -v
git log
git push --set-upstream origin main
git pull
git push --set-upstream origin main
git remote -v
git push --set-upstream origin main
git pull
git push --set-upstream origin main
git push -u origin main
git push --set-upstream main
git push
clear
git pull --rebase origin main
cls
git status
clear
git status
git user.name
clear
user.name
git user.name
clear
git config -all
clear
git config -e
clear
git config user.name
git config user.email
git clone git@github.com:IlyaLetich/git-demo.git
cat song.txt
cd git-demo/
cat song.txt
touch song.txt
ls
vi song.txt 
vi song.txt 
